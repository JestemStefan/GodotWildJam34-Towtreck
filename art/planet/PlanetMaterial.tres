[gd_resource type="ShaderMaterial" load_steps=13 format=2]

[ext_resource path="res://art/planet/Planet_surface_gragient.tres" type="Gradient" id=1]

[sub_resource type="VisualShaderNodeTextureUniform" id=1]
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeTextureUniform" id=3]
uniform_name = "TextureUniform2"

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 5

[sub_resource type="Gradient" id=5]
offsets = PoolRealArray( 0.242658, 0.253478 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=6]
gradient = SubResource( 5 )

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = SubResource( 6 )

[sub_resource type="VisualShader" id=8]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D TextureUniform;
uniform sampler2D TextureUniform2;
uniform sampler2D tex_frg_6;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(TextureUniform, n_out3p0.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// ScalarOp:5
	float n_in5p1 = 2.00000;
	float n_out5p0 = pow(dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333)), n_in5p1);

// TextureUniform:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 n_tex_read = texture(TextureUniform2, vec3(n_out5p0).xy);
		n_out4p0 = n_tex_read.rgb;
		n_out4p1 = n_tex_read.a;
	}

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, vec3(n_out5p0).xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// Output:0
	ALBEDO = n_out4p0;
	ROUGHNESS = dot(n_out6p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -715, 158 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -400, 240 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -660, 260 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 140, 180 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -160, 240 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( 120, 400 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 4, 0, 0, 0, 2, 0, 5, 0, 5, 0, 4, 0, 5, 0, 6, 0, 6, 0, 0, 3 )

[sub_resource type="OpenSimplexNoise" id=9]
seed = 4
octaves = 5
period = 107.8
persistence = 0.665

[sub_resource type="NoiseTexture" id=10]
width = 1024
height = 1024
seamless = true
noise = SubResource( 9 )

[sub_resource type="GradientTexture" id=11]
gradient = ExtResource( 1 )

[resource]
shader = SubResource( 8 )
shader_param/TextureUniform = SubResource( 10 )
shader_param/TextureUniform2 = SubResource( 11 )
